import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.DRADY2L-.js";const c=JSON.parse('{"title":"Logging","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Logging"}],["meta",{"name":"twitter:title","content":"Logging"}],["meta",{"property":"og:description","content":"Easily create Qlik Sense JWTs"}],["meta",{"name":"twitter:description","content":"Easily create Qlik Sense JWTs"}]]},"headers":[],"relativePath":"guide/logging.md","filePath":"guide/logging.md","lastUpdated":1757058720000}'),t={name:"guide/logging.md"};function l(o,s,r,p,h,g){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="logging" tabindex="-1">Logging <a class="header-anchor" href="#logging" aria-label="Permalink to &quot;Logging&quot;">​</a></h1><p>qs-jwt provides configurable logging to help with troubleshooting and monitoring JWT creation.</p><h2 id="logging-levels" tabindex="-1">Logging Levels <a class="header-anchor" href="#logging-levels" aria-label="Permalink to &quot;Logging Levels&quot;">​</a></h2><p>Possible qs-jwt logging levels are <code>error</code>, <code>warning</code>, <code>info</code>, <code>verbose</code>, <code>debug</code>.</p><p>Default logging level is <code>info</code>.</p><h3 id="setting-log-level" tabindex="-1">Setting Log Level <a class="header-anchor" href="#setting-log-level" aria-label="Permalink to &quot;Setting Log Level&quot;">​</a></h3><p>Use the <code>--loglevel</code> option with any command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Basic info logging (default)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --loglevel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [other </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">options...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Verbose logging for more details</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --loglevel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> verbose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [other </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">options...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug logging for troubleshooting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --loglevel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [other </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">options...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Error logging only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --loglevel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [other </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">options...]</span></span></code></pre></div><h2 id="log-level-details" tabindex="-1">Log Level Details <a class="header-anchor" href="#log-level-details" aria-label="Permalink to &quot;Log Level Details&quot;">​</a></h2><h3 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error&quot;">​</a></h3><p>Only critical errors that prevent JWT creation are logged.</p><p><strong>Use when:</strong></p><ul><li>Running in production with minimal logging</li><li>Only need to know about failures</li></ul><h3 id="warning" tabindex="-1">warning <a class="header-anchor" href="#warning" aria-label="Permalink to &quot;warning&quot;">​</a></h3><p>Errors and warnings about potential issues are logged.</p><p><strong>Use when:</strong></p><ul><li>You want to be notified of potential problems</li><li>Running automated scripts</li></ul><h3 id="info-default" tabindex="-1">info (default) <a class="header-anchor" href="#info-default" aria-label="Permalink to &quot;info (default)&quot;">​</a></h3><p>General information about the JWT creation process.</p><p><strong>Use when:</strong></p><ul><li>Normal operation</li><li>You want to see what qs-jwt is doing</li><li>Basic troubleshooting</li></ul><p><strong>Example output:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[INFO] Creating JWT for QSEoW</span></span>
<span class="line"><span>[INFO] User: anna@GRUSGRUS</span></span>
<span class="line"><span>[INFO] Groups: group1, group2</span></span>
<span class="line"><span>[INFO] Expires: 2024-09-03T06:24:00.000Z</span></span>
<span class="line"><span>[INFO] JWT created successfully</span></span></code></pre></div><h3 id="verbose" tabindex="-1">verbose <a class="header-anchor" href="#verbose" aria-label="Permalink to &quot;verbose&quot;">​</a></h3><p>Detailed information about each step of the process.</p><p><strong>Use when:</strong></p><ul><li>Debugging configuration issues</li><li>Understanding the JWT creation process</li><li>Verifying certificate handling</li></ul><p><strong>Example output:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[INFO] Creating JWT for QSEoW</span></span>
<span class="line"><span>[VERBOSE] Reading private key from file: privatekey.pem</span></span>
<span class="line"><span>[VERBOSE] Private key loaded successfully</span></span>
<span class="line"><span>[VERBOSE] Setting JWT payload claims</span></span>
<span class="line"><span>[VERBOSE] - userId: anna</span></span>
<span class="line"><span>[VERBOSE] - userDirectory: GRUSGRUS</span></span>
<span class="line"><span>[VERBOSE] - name: Anna Anderson</span></span>
<span class="line"><span>[VERBOSE] - email: anna@grusgrus.com</span></span>
<span class="line"><span>[VERBOSE] - groups: [&quot;group1&quot;, &quot;group2&quot;]</span></span>
<span class="line"><span>[VERBOSE] - audience: hdJh34wkK</span></span>
<span class="line"><span>[VERBOSE] - expiration: 365 days from now</span></span>
<span class="line"><span>[VERBOSE] Signing JWT with private key</span></span>
<span class="line"><span>[INFO] JWT created successfully</span></span></code></pre></div><h3 id="debug" tabindex="-1">debug <a class="header-anchor" href="#debug" aria-label="Permalink to &quot;debug&quot;">​</a></h3><p>Very detailed logging including internal operations and data structures.</p><p><strong>Use when:</strong></p><ul><li>Developing or debugging qs-jwt</li><li>Investigating complex issues</li><li>Contributing to the project</li></ul><p><strong>Note:</strong> Debug logging may include sensitive information. Use with caution.</p><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="production-environments" tabindex="-1">Production Environments <a class="header-anchor" href="#production-environments" aria-label="Permalink to &quot;Production Environments&quot;">​</a></h3><ul><li>Use <code>error</code> or <code>warning</code> level in production</li><li>Monitor logs for certificate expiration warnings</li><li>Set up alerting for error-level events</li></ul><h3 id="development-and-testing" tabindex="-1">Development and Testing <a class="header-anchor" href="#development-and-testing" aria-label="Permalink to &quot;Development and Testing&quot;">​</a></h3><ul><li>Use <code>info</code> or <code>verbose</code> level during development</li><li>Use <code>debug</code> level when troubleshooting specific issues</li><li>Review logs to understand JWT creation process</li></ul><h3 id="automation-and-ci-cd" tabindex="-1">Automation and CI/CD <a class="header-anchor" href="#automation-and-ci-cd" aria-label="Permalink to &quot;Automation and CI/CD&quot;">​</a></h3><ul><li>Use <code>warning</code> level in automated scripts</li><li>Capture and review logs for failed builds</li><li>Consider log retention policies for compliance</li></ul><h3 id="security-considerations" tabindex="-1">Security Considerations <a class="header-anchor" href="#security-considerations" aria-label="Permalink to &quot;Security Considerations&quot;">​</a></h3><ul><li>Be aware that higher log levels may include sensitive information</li><li>Secure log files and transmission</li><li>Consider log rotation and retention policies</li><li>Never log private keys or JWT contents in production</li></ul><h2 id="troubleshooting-with-logs" tabindex="-1">Troubleshooting with Logs <a class="header-anchor" href="#troubleshooting-with-logs" aria-label="Permalink to &quot;Troubleshooting with Logs&quot;">​</a></h2><h3 id="common-issues-and-log-messages" tabindex="-1">Common Issues and Log Messages <a class="header-anchor" href="#common-issues-and-log-messages" aria-label="Permalink to &quot;Common Issues and Log Messages&quot;">​</a></h3><h4 id="certificate-key-issues" tabindex="-1">Certificate/Key Issues <a class="header-anchor" href="#certificate-key-issues" aria-label="Permalink to &quot;Certificate/Key Issues&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[ERROR] Failed to read private key file: permission denied</span></span>
<span class="line"><span>[ERROR] Invalid private key format</span></span>
<span class="line"><span>[WARNING] Certificate will expire in 30 days</span></span></code></pre></div><h4 id="configuration-issues" tabindex="-1">Configuration Issues <a class="header-anchor" href="#configuration-issues" aria-label="Permalink to &quot;Configuration Issues&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[ERROR] Missing required parameter: --userdir</span></span>
<span class="line"><span>[WARNING] Group name contains special characters: &quot;group with spaces&quot;</span></span></code></pre></div><h4 id="jwt-creation-issues" tabindex="-1">JWT Creation Issues <a class="header-anchor" href="#jwt-creation-issues" aria-label="Permalink to &quot;JWT Creation Issues&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[ERROR] Failed to sign JWT: invalid key</span></span>
<span class="line"><span>[DEBUG] JWT payload: {&quot;userId&quot;:&quot;test&quot;,&quot;exp&quot;:1234567890}</span></span></code></pre></div><h3 id="debugging-steps" tabindex="-1">Debugging Steps <a class="header-anchor" href="#debugging-steps" aria-label="Permalink to &quot;Debugging Steps&quot;">​</a></h3><ol><li><strong>Start with verbose logging</strong> to see the full process</li><li><strong>Check for WARNING messages</strong> that might indicate configuration issues</li><li><strong>Review ERROR messages</strong> for specific failure reasons</li><li><strong>Use debug logging</strong> for complex certificate or signing issues</li></ol><h2 id="log-output-formats" tabindex="-1">Log Output Formats <a class="header-anchor" href="#log-output-formats" aria-label="Permalink to &quot;Log Output Formats&quot;">​</a></h2><p>qs-jwt logs are written to stdout/stderr with a simple format:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[LEVEL] Message text</span></span></code></pre></div><h3 id="redirecting-logs" tabindex="-1">Redirecting Logs <a class="header-anchor" href="#redirecting-logs" aria-label="Permalink to &quot;Redirecting Logs&quot;">​</a></h3><p>Redirect logs to files for analysis:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Redirect all output to file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --loglevel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> verbose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options...] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> qs-jwt.log </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;&amp;1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Redirect only errors to file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options...] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> qs-jwt-errors.log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use with system logging</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options...] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> logger</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qs-jwt</span></span></code></pre></div><h2 id="integration-with-monitoring-systems" tabindex="-1">Integration with Monitoring Systems <a class="header-anchor" href="#integration-with-monitoring-systems" aria-label="Permalink to &quot;Integration with Monitoring Systems&quot;">​</a></h2><h3 id="structured-logging" tabindex="-1">Structured Logging <a class="header-anchor" href="#structured-logging" aria-label="Permalink to &quot;Structured Logging&quot;">​</a></h3><p>For integration with log aggregation systems, consider parsing qs-jwt output:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example: Extract errors for monitoring</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options...] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;&amp;1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\\[ERROR\\]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">): </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/qs-jwt-errors.log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div><h3 id="exit-codes" tabindex="-1">Exit Codes <a class="header-anchor" href="#exit-codes" aria-label="Permalink to &quot;Exit Codes&quot;">​</a></h3><p>qs-jwt returns appropriate exit codes that can be monitored:</p><ul><li><code>0</code>: Success</li><li><code>1</code>: General error</li><li><code>2</code>: Invalid parameters</li></ul><p>Use exit codes in scripts:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./qs-jwt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-qseow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options...]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;JWT creation failed with exit code </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Handle error</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre></div>`,68)])])}const k=i(t,[["render",l]]);export{c as __pageData,k as default};
